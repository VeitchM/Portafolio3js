/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/models/iphoneForPage.glb --transform --types 
Files: public/models/iphoneForPage.glb [408.96KB] > iphoneForPage-transformed.glb [56.23KB] (86%)
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useVideoTexture } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    cellphone: THREE.Mesh;
    cellphone_1: THREE.Mesh;
    cellphone_2: THREE.Mesh;
    cellphone_3: THREE.Mesh;
    cellphone_4: THREE.Mesh;
    cellphone_5: THREE.Mesh;
  };
  materials: {
    ["Phone Color Light"]: THREE.MeshStandardMaterial;
    backlensProjection: THREE.MeshStandardMaterial;
    Metal: THREE.MeshStandardMaterial;
    ["Dark screen edges"]: THREE.MeshStandardMaterial;
    ["Screen on"]: THREE.MeshStandardMaterial;
    proyection: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function PhoneOptimized(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/iphoneForPage-transformed.glb"
  ) as GLTFResult;

  const texture = useVideoTexture("/videos/pastechPT.webm");

  return (
    <group {...props} dispose={null}>
      <group position={[-0.325, 0.01, 2.439]}>
        <mesh
          geometry={nodes.cellphone.geometry}
          material={materials["Phone Color Light"]}
        />
        <mesh
          geometry={nodes.cellphone_1.geometry}
          material={materials.backlensProjection}
        />
        <mesh
          geometry={nodes.cellphone_2.geometry}
          material={materials.Metal}
        />
        <mesh
          geometry={nodes.cellphone_3.geometry}
          material={materials["Dark screen edges"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.cellphone_4.geometry}
          //   material={materials["Screen on"]}
        >
          <meshBasicMaterial map={texture} toneMapped={false} />
        </mesh>
        <mesh
          geometry={nodes.cellphone_5.geometry}
          material={materials.proyection}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/iphoneForPage-transformed.glb");
